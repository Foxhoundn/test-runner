// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prefixFunction returns null literal if testPrefixer returns undefined 1`] = `
{
  "async": true,
  "body": {
    "body": [
      {
        "declarations": [
          {
            "id": {
              "loc": undefined,
              "name": "testFn",
              "type": "Identifier",
            },
            "init": {
              "async": true,
              "body": {
                "body": [
                  {
                    "declarations": [
                      {
                        "id": {
                          "loc": undefined,
                          "name": "context",
                          "type": "Identifier",
                        },
                        "init": {
                          "loc": undefined,
                          "properties": [
                            {
                              "computed": false,
                              "key": {
                                "loc": undefined,
                                "name": "id",
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "shorthand": false,
                              "type": "ObjectProperty",
                              "value": {
                                "type": "StringLiteral",
                                "value": "title--key",
                              },
                            },
                            {
                              "computed": false,
                              "key": {
                                "loc": undefined,
                                "name": "title",
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "shorthand": false,
                              "type": "ObjectProperty",
                              "value": {
                                "type": "StringLiteral",
                                "value": "title",
                              },
                            },
                            {
                              "computed": false,
                              "key": {
                                "loc": undefined,
                                "name": "name",
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "shorthand": false,
                              "type": "ObjectProperty",
                              "value": {
                                "type": "StringLiteral",
                                "value": "Key",
                              },
                            },
                          ],
                          "type": "ObjectExpression",
                        },
                        "loc": undefined,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "kind": "const",
                    "loc": undefined,
                    "type": "VariableDeclaration",
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "extra": {
                            "raw": "'pageerror'",
                            "rawValue": "pageerror",
                          },
                          "loc": undefined,
                          "type": "StringLiteral",
                          "value": "pageerror",
                        },
                        {
                          "async": false,
                          "body": {
                            "body": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "async": false,
                                      "body": {
                                        "arguments": [
                                          {
                                            "loc": undefined,
                                            "name": "id",
                                            "type": "Identifier",
                                          },
                                          {
                                            "loc": undefined,
                                            "name": "err",
                                            "type": "Identifier",
                                          },
                                        ],
                                        "callee": {
                                          "loc": undefined,
                                          "name": "__throwError",
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "type": "CallExpression",
                                      },
                                      "generator": false,
                                      "loc": undefined,
                                      "params": [
                                        {
                                          "loc": undefined,
                                          "properties": [
                                            {
                                              "computed": false,
                                              "extra": {
                                                "shorthand": true,
                                              },
                                              "key": {
                                                "loc": undefined,
                                                "name": "id",
                                                "type": "Identifier",
                                              },
                                              "loc": undefined,
                                              "shorthand": true,
                                              "type": "ObjectProperty",
                                              "value": {
                                                "extra": {},
                                                "loc": undefined,
                                                "name": "id",
                                                "type": "Identifier",
                                              },
                                            },
                                            {
                                              "computed": false,
                                              "extra": {
                                                "shorthand": true,
                                              },
                                              "key": {
                                                "loc": undefined,
                                                "name": "err",
                                                "type": "Identifier",
                                              },
                                              "loc": undefined,
                                              "shorthand": true,
                                              "type": "ObjectProperty",
                                              "value": {
                                                "extra": {},
                                                "loc": undefined,
                                                "name": "err",
                                                "type": "Identifier",
                                              },
                                            },
                                          ],
                                          "type": "ObjectPattern",
                                        },
                                      ],
                                      "type": "ArrowFunctionExpression",
                                    },
                                    {
                                      "loc": undefined,
                                      "properties": [
                                        {
                                          "computed": false,
                                          "key": {
                                            "loc": undefined,
                                            "name": "id",
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "shorthand": false,
                                          "type": "ObjectProperty",
                                          "value": {
                                            "type": "StringLiteral",
                                            "value": "title--key",
                                          },
                                        },
                                        {
                                          "computed": false,
                                          "key": {
                                            "loc": undefined,
                                            "name": "err",
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "shorthand": false,
                                          "type": "ObjectProperty",
                                          "value": {
                                            "computed": false,
                                            "loc": undefined,
                                            "object": {
                                              "loc": undefined,
                                              "name": "err",
                                              "type": "Identifier",
                                            },
                                            "property": {
                                              "loc": undefined,
                                              "name": "message",
                                              "type": "Identifier",
                                            },
                                            "type": "MemberExpression",
                                          },
                                        },
                                      ],
                                      "type": "ObjectExpression",
                                    },
                                  ],
                                  "callee": {
                                    "computed": false,
                                    "loc": undefined,
                                    "object": {
                                      "loc": undefined,
                                      "name": "page",
                                      "type": "Identifier",
                                    },
                                    "property": {
                                      "loc": undefined,
                                      "name": "evaluate",
                                      "type": "Identifier",
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "loc": undefined,
                                  "type": "CallExpression",
                                },
                                "loc": undefined,
                                "type": "ExpressionStatement",
                              },
                            ],
                            "directives": [],
                            "loc": undefined,
                            "type": "BlockStatement",
                          },
                          "generator": false,
                          "loc": undefined,
                          "params": [
                            {
                              "loc": undefined,
                              "name": "err",
                              "type": "Identifier",
                            },
                          ],
                          "type": "ArrowFunctionExpression",
                        },
                      ],
                      "callee": {
                        "computed": false,
                        "loc": undefined,
                        "object": {
                          "loc": undefined,
                          "name": "page",
                          "type": "Identifier",
                        },
                        "property": {
                          "loc": undefined,
                          "name": "on",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "loc": undefined,
                      "type": "CallExpression",
                    },
                    "loc": undefined,
                    "type": "ExpressionStatement",
                  },
                  {
                    "alternate": null,
                    "consequent": {
                      "body": [
                        {
                          "expression": {
                            "argument": {
                              "arguments": [
                                {
                                  "loc": undefined,
                                  "name": "page",
                                  "type": "Identifier",
                                },
                                {
                                  "loc": undefined,
                                  "name": "context",
                                  "type": "Identifier",
                                },
                              ],
                              "callee": {
                                "computed": false,
                                "loc": undefined,
                                "object": {
                                  "loc": undefined,
                                  "name": "globalThis",
                                  "type": "Identifier",
                                },
                                "property": {
                                  "loc": undefined,
                                  "name": "__sbPreRender",
                                  "type": "Identifier",
                                },
                                "type": "MemberExpression",
                              },
                              "loc": undefined,
                              "type": "CallExpression",
                            },
                            "loc": undefined,
                            "type": "AwaitExpression",
                          },
                          "loc": undefined,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "directives": [],
                      "loc": undefined,
                      "type": "BlockStatement",
                    },
                    "loc": undefined,
                    "test": {
                      "computed": false,
                      "loc": undefined,
                      "object": {
                        "loc": undefined,
                        "name": "globalThis",
                        "type": "Identifier",
                      },
                      "property": {
                        "loc": undefined,
                        "name": "__sbPreRender",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "IfStatement",
                  },
                  {
                    "declarations": [
                      {
                        "id": {
                          "loc": undefined,
                          "name": "result",
                          "type": "Identifier",
                        },
                        "init": {
                          "argument": {
                            "arguments": [
                              {
                                "async": false,
                                "body": {
                                  "arguments": [
                                    {
                                      "loc": undefined,
                                      "name": "id",
                                      "type": "Identifier",
                                    },
                                    {
                                      "loc": undefined,
                                      "name": "hasPlayFn",
                                      "type": "Identifier",
                                    },
                                  ],
                                  "callee": {
                                    "loc": undefined,
                                    "name": "__test",
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "type": "CallExpression",
                                },
                                "generator": false,
                                "loc": undefined,
                                "params": [
                                  {
                                    "loc": undefined,
                                    "properties": [
                                      {
                                        "computed": false,
                                        "extra": {
                                          "shorthand": true,
                                        },
                                        "key": {
                                          "loc": undefined,
                                          "name": "id",
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "shorthand": true,
                                        "type": "ObjectProperty",
                                        "value": {
                                          "extra": {},
                                          "loc": undefined,
                                          "name": "id",
                                          "type": "Identifier",
                                        },
                                      },
                                      {
                                        "computed": false,
                                        "extra": {
                                          "shorthand": true,
                                        },
                                        "key": {
                                          "loc": undefined,
                                          "name": "hasPlayFn",
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "shorthand": true,
                                        "type": "ObjectProperty",
                                        "value": {
                                          "extra": {},
                                          "loc": undefined,
                                          "name": "hasPlayFn",
                                          "type": "Identifier",
                                        },
                                      },
                                    ],
                                    "type": "ObjectPattern",
                                  },
                                ],
                                "type": "ArrowFunctionExpression",
                              },
                              {
                                "extra": {
                                  "trailingComma": 618,
                                },
                                "loc": undefined,
                                "properties": [
                                  {
                                    "computed": false,
                                    "key": {
                                      "loc": undefined,
                                      "name": "id",
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "shorthand": false,
                                    "type": "ObjectProperty",
                                    "value": {
                                      "type": "StringLiteral",
                                      "value": "title--key",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                            ],
                            "callee": {
                              "computed": false,
                              "loc": undefined,
                              "object": {
                                "loc": undefined,
                                "name": "page",
                                "type": "Identifier",
                              },
                              "property": {
                                "loc": undefined,
                                "name": "evaluate",
                                "type": "Identifier",
                              },
                              "type": "MemberExpression",
                            },
                            "loc": undefined,
                            "type": "CallExpression",
                          },
                          "loc": undefined,
                          "type": "AwaitExpression",
                        },
                        "loc": undefined,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "kind": "const",
                    "loc": undefined,
                    "type": "VariableDeclaration",
                  },
                  {
                    "alternate": null,
                    "consequent": {
                      "body": [
                        {
                          "expression": {
                            "argument": {
                              "arguments": [
                                {
                                  "loc": undefined,
                                  "name": "page",
                                  "type": "Identifier",
                                },
                                {
                                  "loc": undefined,
                                  "name": "context",
                                  "type": "Identifier",
                                },
                              ],
                              "callee": {
                                "computed": false,
                                "loc": undefined,
                                "object": {
                                  "loc": undefined,
                                  "name": "globalThis",
                                  "type": "Identifier",
                                },
                                "property": {
                                  "loc": undefined,
                                  "name": "__sbPostRender",
                                  "type": "Identifier",
                                },
                                "type": "MemberExpression",
                              },
                              "loc": undefined,
                              "type": "CallExpression",
                            },
                            "loc": undefined,
                            "type": "AwaitExpression",
                          },
                          "loc": undefined,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "directives": [],
                      "loc": undefined,
                      "type": "BlockStatement",
                    },
                    "loc": undefined,
                    "test": {
                      "computed": false,
                      "loc": undefined,
                      "object": {
                        "loc": undefined,
                        "name": "globalThis",
                        "type": "Identifier",
                      },
                      "property": {
                        "loc": undefined,
                        "name": "__sbPostRender",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "IfStatement",
                  },
                  {
                    "alternate": null,
                    "consequent": {
                      "body": [
                        {
                          "declarations": [
                            {
                              "id": {
                                "loc": undefined,
                                "name": "isCoverageSetupCorrectly",
                                "type": "Identifier",
                              },
                              "init": {
                                "argument": {
                                  "arguments": [
                                    {
                                      "async": false,
                                      "body": {
                                        "left": {
                                          "extra": {
                                            "raw": "'__coverage__'",
                                            "rawValue": "__coverage__",
                                          },
                                          "loc": undefined,
                                          "type": "StringLiteral",
                                          "value": "__coverage__",
                                        },
                                        "loc": undefined,
                                        "operator": "in",
                                        "right": {
                                          "loc": undefined,
                                          "name": "window",
                                          "type": "Identifier",
                                        },
                                        "type": "BinaryExpression",
                                      },
                                      "generator": false,
                                      "loc": undefined,
                                      "params": [],
                                      "type": "ArrowFunctionExpression",
                                    },
                                  ],
                                  "callee": {
                                    "computed": false,
                                    "loc": undefined,
                                    "object": {
                                      "loc": undefined,
                                      "name": "page",
                                      "type": "Identifier",
                                    },
                                    "property": {
                                      "loc": undefined,
                                      "name": "evaluate",
                                      "type": "Identifier",
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "loc": undefined,
                                  "type": "CallExpression",
                                },
                                "loc": undefined,
                                "type": "AwaitExpression",
                              },
                              "loc": undefined,
                              "type": "VariableDeclarator",
                            },
                          ],
                          "kind": "const",
                          "loc": undefined,
                          "type": "VariableDeclaration",
                        },
                        {
                          "alternate": null,
                          "consequent": {
                            "body": [
                              {
                                "argument": {
                                  "arguments": [
                                    {
                                      "expressions": [],
                                      "loc": undefined,
                                      "quasis": [
                                        {
                                          "loc": undefined,
                                          "tail": true,
                                          "type": "TemplateElement",
                                          "value": {
                                            "cooked": "[Test runner] An error occurred when evaluating code coverage:
The code in this story is not instrumented, which means the coverage setup is likely not correct.
More info: https://github.com/storybookjs/test-runner#setting-up-code-coverage",
                                            "raw": "[Test runner] An error occurred when evaluating code coverage:
The code in this story is not instrumented, which means the coverage setup is likely not correct.
More info: https://github.com/storybookjs/test-runner#setting-up-code-coverage",
                                          },
                                        },
                                      ],
                                      "type": "TemplateLiteral",
                                    },
                                  ],
                                  "callee": {
                                    "loc": undefined,
                                    "name": "Error",
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "type": "NewExpression",
                                },
                                "loc": undefined,
                                "type": "ThrowStatement",
                              },
                            ],
                            "directives": [],
                            "loc": undefined,
                            "type": "BlockStatement",
                          },
                          "loc": undefined,
                          "test": {
                            "argument": {
                              "loc": undefined,
                              "name": "isCoverageSetupCorrectly",
                              "type": "Identifier",
                            },
                            "loc": undefined,
                            "operator": "!",
                            "prefix": true,
                            "type": "UnaryExpression",
                          },
                          "type": "IfStatement",
                        },
                        {
                          "expression": {
                            "argument": {
                              "arguments": [
                                {
                                  "loc": undefined,
                                  "name": "page",
                                  "type": "Identifier",
                                },
                              ],
                              "callee": {
                                "computed": false,
                                "loc": undefined,
                                "object": {
                                  "loc": undefined,
                                  "name": "jestPlaywright",
                                  "type": "Identifier",
                                },
                                "property": {
                                  "loc": undefined,
                                  "name": "saveCoverage",
                                  "type": "Identifier",
                                },
                                "type": "MemberExpression",
                              },
                              "loc": undefined,
                              "type": "CallExpression",
                            },
                            "loc": undefined,
                            "type": "AwaitExpression",
                          },
                          "loc": undefined,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "directives": [],
                      "loc": undefined,
                      "type": "BlockStatement",
                    },
                    "loc": undefined,
                    "test": {
                      "computed": false,
                      "loc": undefined,
                      "object": {
                        "loc": undefined,
                        "name": "globalThis",
                        "type": "Identifier",
                      },
                      "property": {
                        "loc": undefined,
                        "name": "__sbCollectCoverage",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "IfStatement",
                  },
                  {
                    "argument": {
                      "loc": undefined,
                      "name": "result",
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "type": "ReturnStatement",
                  },
                ],
                "directives": [],
                "loc": undefined,
                "type": "BlockStatement",
              },
              "generator": false,
              "loc": undefined,
              "params": [],
              "type": "ArrowFunctionExpression",
            },
            "loc": undefined,
            "type": "VariableDeclarator",
          },
        ],
        "kind": "const",
        "loc": undefined,
        "type": "VariableDeclaration",
      },
      {
        "block": {
          "body": [
            {
              "expression": {
                "argument": {
                  "arguments": [],
                  "callee": {
                    "loc": undefined,
                    "name": "testFn",
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "type": "CallExpression",
                },
                "loc": undefined,
                "type": "AwaitExpression",
              },
              "loc": undefined,
              "type": "ExpressionStatement",
            },
          ],
          "directives": [],
          "loc": undefined,
          "type": "BlockStatement",
        },
        "finalizer": null,
        "handler": {
          "body": {
            "body": [
              {
                "alternate": {
                  "body": [
                    {
                      "argument": {
                        "loc": undefined,
                        "name": "err",
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "type": "ThrowStatement",
                    },
                  ],
                  "directives": [],
                  "loc": undefined,
                  "type": "BlockStatement",
                },
                "consequent": {
                  "body": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expressions": [
                              {
                                "type": "StringLiteral",
                                "value": "title",
                              },
                              {
                                "type": "StringLiteral",
                                "value": "Key",
                              },
                            ],
                            "loc": undefined,
                            "quasis": [
                              {
                                "loc": undefined,
                                "tail": false,
                                "type": "TemplateElement",
                                "value": {
                                  "cooked": "An error occurred in the following story, most likely because of a navigation: "",
                                  "raw": "An error occurred in the following story, most likely because of a navigation: "",
                                },
                              },
                              {
                                "loc": undefined,
                                "tail": false,
                                "type": "TemplateElement",
                                "value": {
                                  "cooked": "/",
                                  "raw": "/",
                                },
                              },
                              {
                                "loc": undefined,
                                "tail": true,
                                "type": "TemplateElement",
                                "value": {
                                  "cooked": "". Retrying...",
                                  "raw": "". Retrying...",
                                },
                              },
                            ],
                            "type": "TemplateLiteral",
                          },
                        ],
                        "callee": {
                          "computed": false,
                          "loc": undefined,
                          "object": {
                            "loc": undefined,
                            "name": "console",
                            "type": "Identifier",
                          },
                          "property": {
                            "loc": undefined,
                            "name": "log",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                        "loc": undefined,
                        "type": "CallExpression",
                      },
                      "loc": undefined,
                      "type": "ExpressionStatement",
                    },
                    {
                      "expression": {
                        "argument": {
                          "arguments": [],
                          "callee": {
                            "computed": false,
                            "loc": undefined,
                            "object": {
                              "loc": undefined,
                              "name": "jestPlaywright",
                              "type": "Identifier",
                            },
                            "property": {
                              "loc": undefined,
                              "name": "resetPage",
                              "type": "Identifier",
                            },
                            "type": "MemberExpression",
                          },
                          "loc": undefined,
                          "type": "CallExpression",
                        },
                        "loc": undefined,
                        "type": "AwaitExpression",
                      },
                      "loc": undefined,
                      "type": "ExpressionStatement",
                    },
                    {
                      "expression": {
                        "argument": {
                          "arguments": [
                            {
                              "computed": false,
                              "loc": undefined,
                              "object": {
                                "loc": undefined,
                                "name": "globalThis",
                                "type": "Identifier",
                              },
                              "property": {
                                "loc": undefined,
                                "name": "page",
                                "type": "Identifier",
                              },
                              "type": "MemberExpression",
                            },
                            {
                              "computed": false,
                              "loc": undefined,
                              "object": {
                                "loc": undefined,
                                "name": "globalThis",
                                "type": "Identifier",
                              },
                              "property": {
                                "loc": undefined,
                                "name": "context",
                                "type": "Identifier",
                              },
                              "type": "MemberExpression",
                            },
                          ],
                          "callee": {
                            "computed": false,
                            "loc": undefined,
                            "object": {
                              "loc": undefined,
                              "name": "globalThis",
                              "type": "Identifier",
                            },
                            "property": {
                              "loc": undefined,
                              "name": "__sbSetupPage",
                              "type": "Identifier",
                            },
                            "type": "MemberExpression",
                          },
                          "loc": undefined,
                          "type": "CallExpression",
                        },
                        "loc": undefined,
                        "type": "AwaitExpression",
                      },
                      "loc": undefined,
                      "type": "ExpressionStatement",
                    },
                    {
                      "expression": {
                        "argument": {
                          "arguments": [],
                          "callee": {
                            "loc": undefined,
                            "name": "testFn",
                            "type": "Identifier",
                          },
                          "loc": undefined,
                          "type": "CallExpression",
                        },
                        "loc": undefined,
                        "type": "AwaitExpression",
                      },
                      "loc": undefined,
                      "type": "ExpressionStatement",
                    },
                  ],
                  "directives": [],
                  "loc": undefined,
                  "type": "BlockStatement",
                },
                "loc": undefined,
                "test": {
                  "arguments": [
                    {
                      "extra": {
                        "raw": "'Execution context was destroyed'",
                        "rawValue": "Execution context was destroyed",
                      },
                      "loc": undefined,
                      "type": "StringLiteral",
                      "value": "Execution context was destroyed",
                    },
                  ],
                  "callee": {
                    "computed": false,
                    "loc": undefined,
                    "object": {
                      "arguments": [],
                      "callee": {
                        "computed": false,
                        "loc": undefined,
                        "object": {
                          "loc": undefined,
                          "name": "err",
                          "type": "Identifier",
                        },
                        "property": {
                          "loc": undefined,
                          "name": "toString",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "loc": undefined,
                      "type": "CallExpression",
                    },
                    "property": {
                      "loc": undefined,
                      "name": "includes",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                  "loc": undefined,
                  "type": "CallExpression",
                },
                "type": "IfStatement",
              },
            ],
            "directives": [],
            "loc": undefined,
            "type": "BlockStatement",
          },
          "loc": undefined,
          "param": {
            "loc": undefined,
            "name": "err",
            "type": "Identifier",
          },
          "type": "CatchClause",
        },
        "loc": undefined,
        "type": "TryStatement",
      },
    ],
    "directives": [],
    "loc": undefined,
    "type": "BlockStatement",
  },
  "generator": false,
  "loc": undefined,
  "params": [],
  "type": "ArrowFunctionExpression",
}
`;

exports[`transformCsf calls the beforeEachPrefixer function once 1`] = `
"
      export default {
        title: 'Button',
        parameters: {
          play: {
            steps: [
              { id: 'step1', action: 'click', target: 'button' },
              { id: 'step2', action: 'click', target: 'button' },
            ],
          },
        },
      };
      export const Primary = () => '<button>Primary</button>';
    

if (!require.main) {
  describe("Button", () => {
    describe("Primary", () => {
      it("smoke-test", async () => {
        const testFn = async () => {
          const context = {
            id: "button--primary",
            title: "Button",
            name: "Primary"
          };
          page.on('pageerror', err => {
            page.evaluate(({
              id,
              err
            }) => __throwError(id, err), {
              id: "button--primary",
              err: err.message
            });
          });
          if (globalThis.__sbPreRender) {
            await globalThis.__sbPreRender(page, context);
          }
          const result = await page.evaluate(({
            id,
            hasPlayFn
          }) => __test(id, hasPlayFn), {
            id: "button--primary"
          });
          if (globalThis.__sbPostRender) {
            await globalThis.__sbPostRender(page, context);
          }
          if (globalThis.__sbCollectCoverage) {
            const isCoverageSetupCorrectly = await page.evaluate(() => '__coverage__' in window);
            if (!isCoverageSetupCorrectly) {
              throw new Error(\`[Test runner] An error occurred when evaluating code coverage:
  The code in this story is not instrumented, which means the coverage setup is likely not correct.
  More info: https://github.com/storybookjs/test-runner#setting-up-code-coverage\`);
            }
            await jestPlaywright.saveCoverage(page);
          }
          return result;
        };
        try {
          await testFn();
        } catch (err) {
          if (err.toString().includes('Execution context was destroyed')) {
            console.log(\`An error occurred in the following story, most likely because of a navigation: "\${"Button"}/\${"Primary"}". Retrying...\`);
            await jestPlaywright.resetPage();
            await globalThis.__sbSetupPage(globalThis.page, globalThis.context);
            await testFn();
          } else {
            throw err;
          }
        }
      });
    });
  });
}"
`;

exports[`transformCsf calls the testPrefixer function for each test 1`] = `
"
      export default {
        title: 'Button',
        parameters: {
          play: {
            steps: [
              { id: 'step1', action: 'click', target: 'button' },
              { id: 'step2', action: 'click', target: 'button' },
            ],
          },
        },
      };
      export const Primary = () => '<button>Primary</button>';
    

if (!require.main) {
  describe("Button", () => {
    describe("Primary", () => {
      it("smoke-test", async () => {
        const testFn = async () => {
          const context = {
            id: "button--primary",
            title: "Button",
            name: "Primary"
          };
          page.on('pageerror', err => {
            page.evaluate(({
              id,
              err
            }) => __throwError(id, err), {
              id: "button--primary",
              err: err.message
            });
          });
          if (globalThis.__sbPreRender) {
            await globalThis.__sbPreRender(page, context);
          }
          const result = await page.evaluate(({
            id,
            hasPlayFn
          }) => __test(id, hasPlayFn), {
            id: "button--primary"
          });
          if (globalThis.__sbPostRender) {
            await globalThis.__sbPostRender(page, context);
          }
          if (globalThis.__sbCollectCoverage) {
            const isCoverageSetupCorrectly = await page.evaluate(() => '__coverage__' in window);
            if (!isCoverageSetupCorrectly) {
              throw new Error(\`[Test runner] An error occurred when evaluating code coverage:
  The code in this story is not instrumented, which means the coverage setup is likely not correct.
  More info: https://github.com/storybookjs/test-runner#setting-up-code-coverage\`);
            }
            await jestPlaywright.saveCoverage(page);
          }
          return result;
        };
        try {
          await testFn();
        } catch (err) {
          if (err.toString().includes('Execution context was destroyed')) {
            console.log(\`An error occurred in the following story, most likely because of a navigation: "\${"Button"}/\${"Primary"}". Retrying...\`);
            await jestPlaywright.resetPage();
            await globalThis.__sbSetupPage(globalThis.page, globalThis.context);
            await testFn();
          } else {
            throw err;
          }
        }
      });
    });
  });
}"
`;

exports[`transformCsf clears the body if clearBody option is true 1`] = `
"
if (!require.main) {
  describe("Button", () => {
    describe("Primary", () => {
      it("smoke-test", async () => {
        const testFn = async () => {
          const context = {
            id: "button--primary",
            title: "Button",
            name: "Primary"
          };
          page.on('pageerror', err => {
            page.evaluate(({
              id,
              err
            }) => __throwError(id, err), {
              id: "button--primary",
              err: err.message
            });
          });
          if (globalThis.__sbPreRender) {
            await globalThis.__sbPreRender(page, context);
          }
          const result = await page.evaluate(({
            id,
            hasPlayFn
          }) => __test(id, hasPlayFn), {
            id: "button--primary"
          });
          if (globalThis.__sbPostRender) {
            await globalThis.__sbPostRender(page, context);
          }
          if (globalThis.__sbCollectCoverage) {
            const isCoverageSetupCorrectly = await page.evaluate(() => '__coverage__' in window);
            if (!isCoverageSetupCorrectly) {
              throw new Error(\`[Test runner] An error occurred when evaluating code coverage:
  The code in this story is not instrumented, which means the coverage setup is likely not correct.
  More info: https://github.com/storybookjs/test-runner#setting-up-code-coverage\`);
            }
            await jestPlaywright.saveCoverage(page);
          }
          return result;
        };
        try {
          await testFn();
        } catch (err) {
          if (err.toString().includes('Execution context was destroyed')) {
            console.log(\`An error occurred in the following story, most likely because of a navigation: "\${"Button"}/\${"Primary"}". Retrying...\`);
            await jestPlaywright.resetPage();
            await globalThis.__sbSetupPage(globalThis.page, globalThis.context);
            await testFn();
          } else {
            throw err;
          }
        }
      });
    });
  });
}"
`;

exports[`transformCsf executes beforeEach code before each test 1`] = `
"
    export default {
        title: 'Button',
        parameters: {
          play: {
            steps: [
              { id: 'step1', action: 'click', target: 'button' },
              { id: 'step2', action: 'click', target: 'button' },
            ],
          },
        },
      };
      export const Primary = () => '<button>Primary</button>';
    

if (!require.main) {
  describe("Button", () => {
    beforeEach(beforeEach(() => {
      console.log("beforeEach called");
    }));
    describe("Primary", () => {
      it("smoke-test", null);
    });
  });
}"
`;

exports[`transformCsf returns empty result if there are no stories 1`] = `
"
      export default {
        title: 'Button',
      };
    
"
`;
